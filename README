 * Purpose

This is the dev environment from Bin Zheng, to speed up the environment setup.

 * Setup for Linux

 1. Install vim, tmux.
 2. Setup the links.
 ```
 $ ./setup.sh
 ```
 3. Install vim plungins using vundle.
 Launch *vim* and run *:PluginInstall*

 4. For Golang dev, you need to install go plugin binaries:
 ```
 $ export GOPATH=<your_dev_go_root>
 $ export PATH=$PATH:$GOPATH/bin
 Launch *vim* and run *:GoInstallBinarie*, it will install `gocode`, `godef`, `goimports` into
 $GOPATH/bin/
 ```

 5. For Golang dev, you can generage tags file using gotags
 ```
 $ gotags -L go.files -f tags 
 $ cscope -kbq -i go.files
 ```

 * Setup for Mac

 1. Install below packages:

    - Homebrew: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    - iTerm2: `brew install iTerm2`
    - vim: brew install vim
    - git: brew install git
    - zsh: sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

 2. Configure zsh:
    1. Replace bash to zsh: `chsh -s /bin/zsh`
    2. Install highlighting: brew install zsh-syntax-highlighting
    3. Install autocomplete: git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
    4. Install git-flow-complete: git clone https://github.com/bobthecow/git-flow-completion ~/.oh-my-zsh/custom/plugins/git-flow-completion
    3. Configure "~/.zshrc": 
        ```
        ZSH_THEME="agnoster"
        DEFAULT_USER="bijun"
        plugins=(
          git
          zsh-syntax-highlighting
          zsh-autosuggestions
          git-flow-completion
        )

        alias rm='rm -i'
        alias cp='cp -i'
        alias mv='mv -i'
        alias gs='git status -uno'
        alias gb='git branch'

        source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
        ```

 3. Configure Meslo ttf:
    1. Download the ttf: https://github.com/powerline/fonts/blob/master/Meslo%20Slashed/Meslo%20LG%20M%20Regular%20for%20Powerline.ttf
    2. Install the ttf
    3. Configure iTerm2 to use the ttf: Profiles -> Text -> Font -> Chanage Font, then select "Meslo LG M Regular for Powerline"

 4. Install myDev: ./setup.sh

 5. Install vim plungins using vundle.
    Launch *vim* and run *:PluginInstall*

 6. Configure tmux status line to use vim airline theme. I have already generated a theme file, so
 you may not need this step.
    1. Generate the theme file for tmux in vim using the vim plugin edkolev/tmuxline.vim https://github.com/edkolev/tmuxline.vim
        1. Open vim in a tmux window
        2. Run ":Tmuxline lightline_insert" in vim
        3. Run ":TmuxlineSnapshot ~/myDevEnv/.airline_tmux_generated.theme" in vim to generate theme
        file
    2. Source the theme file in tmux.conf
        ```
        if-shell "test -f ~/myDevEnv/.airline_tmux_generated.theme" "source ~/myDevEnv/.airline_tmux_generated.theme"
        ```
 7. Configure zsh prompt to only prompt the current folder name, not the whole path. You can skip
 this step if you don't need.
    1. Open the "~/.oh-my-zsh/themes/agnoster.zsh-theme", and change one function like below.
        ```
        prompt_dir() {
        #   prompt_segment blue black '%~'
            prompt_segment blue black '%1d'
        }
        ```

* Appendix

# iTerm2 hotkeys

| Command  | Description  |
| - | - |
| C+t | new tab |
| C+w | close tab |
| C+Left/Right | switch tab |
| C+d | split vertical |
| C+S+d | split horizon |

